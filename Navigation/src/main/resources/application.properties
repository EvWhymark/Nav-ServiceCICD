spring.config.import=application-secret.properties

spring.application.name=Navigation
#database=postgresql
database=neo4j

## database user details - postgres
#spring.datasource.username=${spring.datasource.username}
#spring.datasource.password=${spring.datasource.password}
#spring.cloud.gcp.sql.database-name=flightIQ
#spring.cloud.gcp.sql.instance-connection-name=${spring.cloud.gcp.sql.instance-connection-name}

spring.neo4j.uri=${spring.datasource.uri}
spring.neo4j.authentication.username=${spring.datasource.username}
spring.neo4j.authentication.password=${spring.datasource.password}

logging.level.org.neo4j.driver.Driver = DEBUG  
logging.level.org.springframework.data.neo4j=DEBUG

## To prevent initializing the table on start
#spring.sql.init.mode=never
#
## So app starts despite "table already exists" errors.
#spring.sql.init.continue-on-error=true
#
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#
## Ensures Hibernate does not convert camelCase to snake_case
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#
## Ensures column names match what is specified in @Column(name="...")
#spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions=true
#
## To enable SQL logging
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
## includes custom messages in error responses
#server.error.include-message=always

